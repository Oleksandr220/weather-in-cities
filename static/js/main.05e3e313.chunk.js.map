{"version":3,"sources":["components/WeatherDetailsView/WeatherDeatails.module.scss","components/CitiesList/CitiesList.module.scss","components/containers/PageWraper/PageWraper.module.scss","components/Button/Button.module.scss","components/Input/Input.module.scss","components/containers/PageWraper/PageWraper.jsx","services/weatherhelf-api.js","components/Button/Button.jsx","redux/citiesItems/selector.js","components/CitiesList/CitiesList.jsx","components/Input/Input.jsx","redux/weatherCity/action.js","components/Searchbar/Searchbar.jsx","redux/citiesItems/action.js","redux/weatherCity/selector.js","components/containers/CitiesWeather/CitiesWeather.jsx","components/WeatherDetailsView/WeatherDetails.jsx","App.js","redux/weatherCity/reducer.js","redux/citiesItems/reducer.js","redux/rootReducer.js","services/loadFromLocalStorage.js","services/saveToLocalStrage.js","redux/store.js","index.js"],"names":["module","exports","Conteiner","title","children","className","styles","container__title","container","BASE_URL","API_key","city","a","axios","get","weatherData","result","data","getWeather","Button","text","onClick","type","btnGetWeather","getCities","state","citiesReducer","cities","CitiesView","onUpdate","onDelete","useSelector","location","useLocation","citiesList","map","citiesListItem","citiesListItem__link","to","pathname","name","from","sys","country","Math","round","main","temp","id","Input","request","onChange","placeholder","weatherOnCityInput","value","autoComplete","autoFocus","weather","Searchbar","useState","setRequest","dispatch","useDispatch","weatherOnCity","onSubmit","event","preventDefault","trim","currentTarget","toLowerCase","getCityWeather","weatherReducer","CitiesWeather","cityRequest","responseWeather","cityName","getWeatherApi","find","el","alert","useEffect","curName","idx","indexOf","splice","searchbar","CitiesList","newCities","filter","WeatherDetailsView","history","useHistory","setCity","useParams","sunrise","Date","toLocaleTimeString","sunset","key","description","currentCity","countryName","feels_like","getResponseCity","search","push","info","field","App","fallback","path","exact","PageWraper","initialState","action","rootReducer","combineReducers","loadFromLocalStorage","citiesStorageList","localStorage","getItem","JSON","parse","e","console","warn","saveToLocalStorage","stringify","setItem","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","subscribe","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.05e3e313.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"info\":\"WeatherDeatails_info__1D2Nd\",\"field\":\"WeatherDeatails_field__B2F63\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"citiesList\":\"CitiesList_citiesList__12wjE\",\"citiesListItem\":\"CitiesList_citiesListItem__GLRcA\",\"citiesListItem__link\":\"CitiesList_citiesListItem__link__c58fj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PageWraper_container__1K4EQ\",\"container__title\":\"PageWraper_container__title__2oHI5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnGetWeather\":\"Button_btnGetWeather__38FYw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"weatherOnCityInput\":\"Input_weatherOnCityInput__2d5pl\"};","import React from 'react';\nimport styles from './PageWraper.module.scss';\n\nconst Conteiner = ({ title, children }) => {\n  return (\n    <>\n      <header>\n        <h2 className={styles.container__title}>{title}</h2>\n      </header>\n      <div className={styles.container}>{children}</div>\n    </>\n  );\n};\n\nexport default Conteiner;\n","import axios from 'axios'\n\nconst BASE_URL = 'https://api.openweathermap.org'\n\nconst API_key = 'e2deec3919b698e6e2da44b14544310d'\n\nasync function getWeather(city) {\n  const weatherData = await axios.get(\n    `${BASE_URL}/data/2.5/weather?q=${city}&appid=${API_key}`\n  )\n  const result = weatherData.data\n  return result\n}\n\nexport default getWeather\n","import styles from './Button.module.scss';\n\nexport default function Button({ text, onClick }) {\n  return (\n    <button type=\"submit\" className={styles.btnGetWeather} onClick={onClick}>\n      {text}\n    </button>\n  );\n}\n","const getCities = state => state.citiesReducer.cities;\n\nexport default getCities;\n","import { Link, useLocation } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\nimport styles from './CitiesList.module.scss'\nimport Button from '../Button'\nimport getCities from '../../redux/citiesItems/selector'\n\nconst CitiesView = ({ onUpdate, onDelete }) => {\n  const cities = useSelector(getCities)\n  const location = useLocation()\n\n  return (\n    <ul className={styles.citiesList}>\n      {cities.map((city) => (\n        <li key={city.id} className={styles.citiesListItem}>\n          <Link\n            className={styles.citiesListItem__link}\n            to={{\n              pathname: `/details/${city.name}`,\n              state: { from: location },\n            }}\n          >\n            <p>Country: {city.sys.country}</p>\n            <p>City: {city.name}</p>\n            <p>Temp: {Math.round(city.main.temp - 273)} °C</p>\n          </Link>\n          <Button text=\"Delete\" onClick={() => onDelete(city.id)} />\n          <Button text=\"Update\" onClick={() => onUpdate(city.name)} />\n        </li>\n      ))}\n    </ul>\n  )\n}\n\nexport default CitiesView\n","import styles from './Input.module.scss';\n\nexport default function Input({ request, onChange, placeholder }) {\n  return (\n    <input\n      className={styles.weatherOnCityInput}\n      value={request}\n      onChange={onChange}\n      type=\"text\"\n      autoComplete=\"off\"\n      autoFocus\n      placeholder={placeholder}\n    />\n  );\n}\n","const weather = data => ({ data, type: 'FIND_CITY' });\n\nexport default weather;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport Button from '../Button';\nimport Input from '../Input';\nimport styles from './Searchbar.module.scss';\nimport weather from '../../redux/weatherCity/action';\n\nexport default function Searchbar() {\n  const [request, setRequest] = useState('');\n  const dispatch = useDispatch();\n\n  const handleNameChange = event => {\n    setRequest(event.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (request.trim() === '') {\n      return;\n    }\n\n    dispatch(weather(request));\n    setRequest('');\n  };\n\n  return (\n    <div>\n      <form className={styles.weatherOnCity} onSubmit={handleSubmit}>\n        <Input\n          request={request}\n          onChange={handleNameChange}\n          placeholder=\"Search weather in city\"\n        />\n        <Button text=\"search city\" />\n      </form>\n    </div>\n  );\n}\n","const addCity = data => ({ data, type: 'ADD_CITY' });\nconst updateCity = data => ({ data, type: 'UPDATE_CITY' });\nconst removeCity = data => ({ data, type: 'REMOVE_CITY' });\n\nexport { addCity, removeCity, updateCity };\n","const getCityWeather = state => state.weatherReducer.request;\n\nexport default getCityWeather;\n","import { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport styles from './CitiesWeather.module.scss'\nimport getWeatherApi from '../../../services/weatherhelf-api'\nimport CitiesList from '../../CitiesList'\nimport Searchbar from '../../Searchbar'\nimport weather from '../../../redux/weatherCity/action'\nimport {\n  addCity,\n  removeCity,\n  updateCity,\n} from '../../../redux/citiesItems/action'\nimport getCityWeather from '../../../redux/weatherCity/selector'\nimport getCities from '../../../redux/citiesItems/selector'\n\nconst CitiesWeather = () => {\n  const dispatch = useDispatch()\n\n  const cities = useSelector(getCities)\n  const cityRequest = useSelector(getCityWeather)\n\n  const responseWeather = async function (cityName) {\n    try {\n      const result = await getWeatherApi(cityName)\n      const curentObj = cities.find((el) => result.id === el.id)\n      if (curentObj) {\n        return\n      }\n      dispatch(addCity(result))\n      return\n    } catch (error) {\n      alert('Enter the correct city name...')\n    }\n  }\n\n  useEffect(() => {\n    if (cityRequest) {\n      responseWeather(cityRequest)\n      dispatch(weather(''))\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [cityRequest])\n\n  const onDelelte = (id) => {\n    const newCities = cities.filter((el) => el.id !== id)\n    dispatch(removeCity(newCities))\n  }\n\n  const onUpdate = async (name) => {\n    const result = await getWeatherApi(name)\n    const curName = cities.find((el) => el.name === result.name)\n    const idx = cities.indexOf(curName)\n    cities.splice(idx, 1, result)\n\n    dispatch(updateCity(cities))\n  }\n\n  return (\n    <>\n      <Searchbar className={styles.searchbar} />\n      <CitiesList onDelete={onDelelte} onUpdate={onUpdate} />\n    </>\n  )\n}\n\nexport default CitiesWeather\n","import { useState, useEffect } from 'react'\nimport { useParams, useHistory, useLocation } from 'react-router-dom'\nimport Button from '../Button'\nimport getWeatherApi from '../../services/weatherhelf-api'\nimport styles from './WeatherDeatails.module.scss'\n\nexport default function WeatherDetailsView() {\n  const history = useHistory()\n  const location = useLocation()\n  const [city, setCity] = useState()\n  const { cityName } = useParams()\n\n  async function getResponseCity(cityName) {\n    const result = await getWeatherApi(cityName)\n\n    let sunrise = new Date(result.sys.sunrise * 1000).toLocaleTimeString(\n      'en-US'\n    )\n    let sunset = new Date(result.sys.sunset * 1000).toLocaleTimeString('en-US')\n\n    const weather = result.weather.find((key) => key.description)\n\n    const currentCity = {\n      countryName: result.sys.country,\n      cityName: result.name,\n      description: weather.description,\n      temp: Math.round(result.main.temp - 273),\n      feels_like: Math.round(result.main.feels_like - 273),\n      sunrise: sunrise,\n      sunset: sunset,\n    }\n    return setCity(currentCity)\n  }\n\n  useEffect(() => {\n    getResponseCity(cityName)\n  }, [cityName])\n\n  const onGoBack = () => {\n    if (location?.state?.search) {\n      return history.push(`?query=${location?.state?.search}`)\n    }\n    history.push(location?.state?.from)\n  }\n\n  return (\n    <>\n      {city && (\n        <>\n          <Button text=\"Back\" onClick={onGoBack} />\n          <div className={styles.info}>\n            <h3 className={styles.field}>Country: {city.countryName}</h3>\n            <p className={styles.field}>City: {city.cityName}</p>\n            <p className={styles.field}>Sky: {city.description}</p>\n            <p className={styles.field}>Temp: {city.temp} °C</p>\n            <p className={styles.field}>Feels like: {city.feels_like} °C</p>\n            <p className={styles.field}>Sunrise: {city.sunrise}</p>\n            <p className={styles.field}>Sunset: {city.sunset}</p>\n          </div>\n        </>\n      )}\n    </>\n  )\n}\n","import { Suspense } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport PageWraper from './components/containers/PageWraper';\nimport CitiesWeather from './components/containers/CitiesWeather';\nimport WeatherDetailsView from './components/WeatherDetailsView';\n\nfunction App() {\n  return (\n    <>\n      <Suspense fallback={<h3>Loading</h3>}>\n        <Switch>\n          <Route path=\"/\" exact>\n            <PageWraper title=\"List of added cities\">\n              <CitiesWeather />\n            </PageWraper>\n          </Route>\n          <Route path=\"/details/:cityName\">\n            <PageWraper title=\"Detailed information about the weather in the city\">\n              <WeatherDetailsView />\n            </PageWraper>\n          </Route>\n        </Switch>\n      </Suspense>\n    </>\n  );\n}\n\nexport default App;\n","const initialState = {\n  request: '',\n};\n\nfunction weatherReducer(state = initialState, action) {\n  switch (action.type) {\n    case 'FIND_CITY':\n      return { request: action.data };\n    default:\n      return state;\n  }\n}\n\nexport default weatherReducer;\n","const initialState = {\n  cities: [],\n};\n\nfunction citiesReducer(state = initialState, action) {\n  switch (action.type) {\n    case 'ADD_CITY':\n      return { ...state, cities: [...state.cities, action.data] };\n    case 'UPDATE_CITY':\n      return { ...state, cities: [...action.data] };\n    case 'REMOVE_CITY':\n      return { ...state, cities: [...action.data] };\n    default:\n      return state;\n  }\n}\n\nexport default citiesReducer;\n","import { combineReducers } from 'redux';\nimport weatherReducer from './weatherCity/reducer';\nimport citiesReducer from './citiesItems/reducer';\n\nconst rootReducer = combineReducers({\n  weatherReducer,\n  citiesReducer,\n});\n\nexport default rootReducer;\n","function loadFromLocalStorage() {\n  try {\n    const citiesStorageList = localStorage.getItem('cities');\n    if (citiesStorageList === null) return undefined;\n    return JSON.parse(citiesStorageList);\n  } catch (e) {\n    console.warn(e);\n    return undefined;\n  }\n}\n\nexport default loadFromLocalStorage;\n","function saveToLocalStorage(state) {\n  try {\n    const citiesStorageList = JSON.stringify(state);\n    localStorage.setItem('cities', citiesStorageList);\n  } catch (e) {\n    console.warn(e);\n  }\n}\n\nexport default saveToLocalStorage;\n","import { createStore } from 'redux';\nimport rootReducer from './rootReducer';\nimport loadFromLocalStorage from '../services/loadFromLocalStorage';\nimport saveToLocalStorage from '../services/saveToLocalStrage';\n\nconst store = createStore(\n  rootReducer,\n  loadFromLocalStorage(),\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n);\n\nstore.subscribe(() => saveToLocalStorage(store.getState()));\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.scss';\nimport App from './App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}